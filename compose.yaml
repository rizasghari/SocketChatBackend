services:
  socket-chat-app:
    container_name: socket-chat-app
    build: .
    ports:
      - 8000:8000
    entrypoint: ./socket-chat
    depends_on:
      socket-chat-db:
        condition: service_healthy
      socket-chat-redis:
        condition: service_healthy
      socket-chat-minio:
        condition: service_healthy
    links:
      - socket-chat-db
      - socket-chat-redis
      - socket-chat-minio

  socket-chat-db:
    container_name: socket-chat-db
    image: postgres:12
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
      POSTGRES_DB: socket_chat_db
    ports:
      - 5432:5432
    volumes:
      - socket-chat-db-data:/var/lib/postgres/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready" ]
      interval: 10s
      timeout: 5s
      retries: 5

  socket-chat-redis:
    image: redis:latest
    container_name: socket-chat-redis
    ports:
      - "6379:6379"
    volumes:
      - socket-chat-redis-data:/data
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 5

  socket-chat-minio:
    image: minio/minio:latest
    container_name: socket-chat-minio
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    ports:
      - "9000:9000"
      - "9001:9001"
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 10s
      timeout: 10s
      retries: 3
      start_period: 10s
    volumes:
      - socket-chat-minio-data:/data

volumes:
  socket-chat-db-data: { }
  socket-chat-redis-data: { }
  socket-chat-minio-data: { }